# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_EMAIL   - login info for docker hub
# DOCKER_USER
# DOCKER_PASS

version: 2
jobs:
  build:
    docker:
      - image: debian:10-slim
    steps:
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Install system packages
          command: |
            cd $HOME
            apt-get update && apt-get install -y git curl python3 python3-pip && \
            curl https://download.docker.com/linux/static/stable/x86_64/docker-20.10.7.tgz -O && \
            tar xvf docker-20.10.7.tgz && \
            cp docker/* /usr/bin/
      - checkout
      - run:
          name: Install pip
          command: |
            python3 -m pip install --upgrade pip && \
            python3 -m pip install docker-compose invoke
      - run:
          name: Create version.json
          command: |
            invoke version > version.json && \
            mkdir /artifacts && \
            cp version.json /artifacts/version.json
      - run:
          name: Login to Dockerhub
          command: |
            if [[ -z "${DOCKER_USER}" || -z "${DOCKER_PASS}" ]]; then
              echo "Skipping Login to Dockerhub, credentials not available."
            else
              echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
            fi
      - run: invoke build
      - run: invoke buildtest
      - run: invoke test
      - run: docker inspect $(invoke imageid)
      - run: invoke imageid | tee /artifacts/docker-image-shasum256.txt
      - deploy:
          name: Deploy to docker hub
          command: |
            [[ -n "$DOCKERHUB_REPO" && -n "$DOCKER_USER" && -n "$DOCKER_PASS" ]] || exit 0
            docker tag "$DOCKERHUB_REPO" "$DOCKERHUB_REPO:$CIRCLE_SHA1"
            docker push "$DOCKERHUB_REPO:$CIRCLE_SHA1"
            if [[ "$CIRCLE_BRANCH" == "master" ]]; then
              docker push "$DOCKERHUB_REPO:latest"
            else
              docker tag "$DOCKERHUB_REPO" "$DOCKERHUB_REPO:$CIRCLE_BRANCH"
              docker push "$DOCKERHUB_REPO:$CIRCLE_BRANCH"
            fi
      - store_artifacts:
          path: /artifacts
